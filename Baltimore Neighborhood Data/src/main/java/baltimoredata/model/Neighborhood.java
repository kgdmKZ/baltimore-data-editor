package baltimoredata.model;

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Null;

import org.hibernate.validator.constraints.NotBlank;

import com.fasterxml.jackson.annotation.JsonView;

import baltimoredata.view.NeighborhoodViews;

/**
 * Neighborhood generated by hbm2java
 */
@Entity
@Table(name = "neighborhood", catalog = "baltimore_neighborhoods", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class Neighborhood  {

	private Integer id;
	private Area area;
	private String name;
	private Set<Address> addresses = new HashSet<Address>(0);

	public Neighborhood() {
	}

	public Neighborhood(Area area, String name) {
		this.area = area;
		this.name = name;
	}

	public Neighborhood(Area area, String name, Set<Address> addresses) {
		this.area = area;
		this.name = name;
		this.addresses = addresses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	@Null
	@JsonView(NeighborhoodViews.Minimal.class)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}
    
	@NotNull
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "area_id", nullable = false)
	@JsonView(NeighborhoodViews.Limited.class)
	public Area getArea() {
		return this.area;
	}

	public void setArea(Area area) {
		this.area = area;
	}
    
	@NotBlank
	@Column(name = "name", unique = true, nullable = false)
	@JsonView(NeighborhoodViews.Minimal.class)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}
    
	@Null
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "neighborhood")
	@JsonView(NeighborhoodViews.Full.class)
	public Set<Address> getAddresses() {
		return this.addresses;
	}

	public void setAddresses(Set<Address> addresses) {
		this.addresses = addresses;
	}

}
