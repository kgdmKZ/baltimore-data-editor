package baltimoredata.model;

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Null;
import javax.validation.constraints.Past;
import javax.validation.constraints.Pattern;

import com.fasterxml.jackson.annotation.JsonView;

import baltimoredata.view.POIViews;

/**
 * VacantBuilding generated by hbm2java
 */
@Entity
@Table(name = "vacant_building", catalog = "baltimore_neighborhoods", uniqueConstraints = @UniqueConstraint(columnNames = "referenceid"))
public class VacantBuilding {

	private Integer id;
	private Location location;
	private String referenceid;
	private Date noticedate;

	public VacantBuilding() {
	}

	public VacantBuilding(Location location, String referenceid, Date noticedate) {
		this.location = location;
		this.referenceid = referenceid;
		this.noticedate = noticedate;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	@Null
	@JsonView(POIViews.Minimal.class)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "location_id", nullable = false)
	@NotNull
	@JsonView(POIViews.Limited.class)
	public Location getLocation() {
		return this.location;
	}

	public void setLocation(Location location) {
		this.location = location;
	}

	@Column(name = "referenceid", unique = true, nullable = false)
	@NotNull
	@Pattern(regexp="^[0-9]{4}[a-z ][0-9]{3}[a-z]? [0-9]{6}$")
	@JsonView(POIViews.Minimal.class)
	public String getReferenceid() {
		return this.referenceid;
	}

	public void setReferenceid(String referenceid) {
		this.referenceid = referenceid;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "noticedate", nullable = false, length = 10)
	@NotNull
	@Past
	@JsonView(POIViews.Minimal.class)
	public Date getNoticedate() {
		return this.noticedate;
	}

	public void setNoticedate(Date noticedate) {
		this.noticedate = noticedate;
	}

}
